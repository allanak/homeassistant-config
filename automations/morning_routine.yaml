# Turn on upstairs music between 6-11am when motion in bathroom if house is in Wakeup state (based on alarm clock)
- alias: Morning shower music
  id: shower_mode
  trigger:
    - entity_id: binary_sensor.master_bath_motion_sensor
      platform: state
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: variable.house_state
        state: 'Wakeup'
      - condition: state
        entity_id: media_player.upstairs
        state: 'off'
  action:
    - service: media_player.play_media
      entity_id: media_player.upstairs
      data:
        media_content_id: http://15363.live.streamtheworld.com:80/KROQFMDIALUP_SC
        media_content_type: 'audio/mp4'
    - service: variable.set_variable
      data:
        variable: house_state
        value: 'Shower'
    - service: light.turn_off
      entity_id: light.master_bedroom_rear_lights_level

# Turn off shower music after shower, disarm alarm and tell me where I'm going based on TripIt calendar
- alias: Bathroom Music Off
  id: shower_mode_off
  trigger:
    - entity_id: binary_sensor.master_bath_motion_sensor
      platform: state
      to: 'off'
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: variable.house_state
      state: 'Shower'
  action:
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
    - service: variable.set_variable
      data:
        variable: house_state
        value: 'Morning'
    - service: tts.google_say
      entity_id: media_player.upstairs
      data_template:
        message: >
          {% if is_state('calendar.tripit', 'on') %}
          {{ [ "Enjoy your trip to {{ states.calendar.tripit.attributes.location }}!", "Have a good time in {{ states.calendar.tripit.attributes.location }}. See you soon!" ] | random }}
          {% else %}
          {{ [ "Good morning!", "So fresh and so clean", "Time for some coffee" ] | random }}
          {% endif %}
    - delay: 00:10
    - service: media_player.turn_off
      data:
        entity_id: media_player.upstairs

# Remind everyone that garbage pickup is tomorrow when walking into the kitchen
- alias: Garbage day reminder
  id: garbage_day_reminder
  trigger:
    - platform: state
      entity_id: variable.house_state
      to: 'Morning'
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - mon
  action:
    - wait_template: "{{ states.binary_sensor.kitchen_motion_sensor == 'on' }}"
      timeout: 02:00:00
    - service: tts.google_say
      entity_id: media_player.kitchen
      data_template:
        message: >
          {{ [ "Good morning! This is a reminder that tomorrow is trash pickup day", "Hey, don't forget tomorrow is garbage pickup", "Take the trash out, you lazy bastard!" ] | random }}
