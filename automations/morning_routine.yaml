# Turn on upstairs music between 6-11am when motion in bathroom if house is in Wakeup state (based on alarm clock)
- alias: Morning shower music
  id: shower_mode
  trigger:
    - entity_id: binary_sensor.master_bath_motion_sensor
      platform: state
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: variable.house_state
        state: 'Wakeup'
      - condition: state
        entity_id: media_player.upstairs
        state: 'off'
# Commented out static KROQ stream in favor of various Pandora streams depending on the day of the week
# This was the only way I could figure out how to play Pandora...using TTS on one Google Home to tell one within earshot what to do
#    action:
#    - service: media_player.play_media
#      entity_id: media_player.upstairs
#      data:
#        media_content_id: http://15363.live.streamtheworld.com:80/KROQFMDIALUP_SC
#        media_content_type: 'audio/mp4'
  action:
    - service: tts.google_say
      entity_id: media_player.master_bathroom
      data_template:
        message: >
          {%- if now().strftime("%a") == 'Sun' %} Hey Google Play Sublime
          {%- elif now().strftime("%a") == 'Mon' %} Hey Google Play Metallica
          {%- elif now().strftime("%a") == 'Tue' %} Hey Google Play Stone Temple Pilots
          {%- elif now().strftime("%a") == 'Wed' %} Hey Google Play Pearl Jam
          {%- elif now().strftime("%a") == 'Thu' %} Hey Google Play My Shuffle
          {%- elif now().strftime("%a") == 'Fri' %} Hey Google Play Tupac
          {%- elif now().strftime("%a") == 'Sat' %} Hey Google Play My Thumbprint
          {% endif %}

    - service: variable.set_variable
      data:
        variable: house_state
        value: 'Shower'
    - service: light.turn_off
      entity_id: light.master_bedroom_rear_lights_level

# Turn off shower music after shower, disarm alarm
- alias: Bathroom Music Off
  id: shower_mode_off
  trigger:
    - entity_id: binary_sensor.master_bath_motion_sensor
      platform: state
      to: 'off'
      for:
        minutes: 5
  condition:
    - condition: state
      entity_id: variable.house_state
      state: 'Shower'
  action:
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
    - service: variable.set_variable
      data:
        variable: house_state
        value: 'Morning'

# If it's a travel day, announce where I'm going once I get into the kitchen for coffee. Also remind me if tomorrow is garbage pickup
- alias: Garbage day reminder
  id: garbage_day_reminder
  trigger:
    - platform: state
      entity_id: variable.house_state
      to: 'Morning'
  action:
    - wait_template: "{{ states.binary_sensor.kitchen_motion_sensor == 'on' }}"
      timeout: 02:00:00
    - service: tts.google_say
      entity_id: media_player.kitchen
      data_template:
        message: >
          {% if is_state('calendar.tripit', 'on') %}
          {{ [ 'Enjoy your trip to {{ states.calendar.tripit.attributes.location }}!', 'Have a good time in {{ states.calendar.tripit.attributes.location }}. See you soon!' ] | random }}
          {% endif %}
    - condition: time
      weekday:
        - mon 
    - delay: 00:07
    - service: tts.google_say
      entity_id: media_player.kitchen
      data_template:
        message: >
          {{ [ "Today is Monday. That means tomorrow is trash pickup day", "Hey, don't forget tomorrow is garbage pickup", "Take the trash out, you lazy bastard!" ] | random }}
    - service: media_player.turn_off
      data:
        entity_id: media_player.kitchen
