homeassistant:
  customize:
    alarm_control_panel.home:
      friendly_name: Security System
      homebridge_visible: true
    binary_sensor.rear_bedroom_window_contact:
      device_class: occupancy
      google_assistant: false
      homebridge_visible: true
    binary_sensor.guest_bedroom_window_contact:
      device_class: window
      google_assistant: false
      homebridge_visible: true
    binary_sensor.master_left_window_contact:
      device_class: window
      icon: mdi:window-closed
      google_assistant: false
      homebridge_visible: true
    binary_sensor.master_right_window_contact:
      device_class: window
      icon: mdi:window-closed
      google_assistant: false
      homebridge_visible: true
    binary_sensor.master_bath_window_contact:
      device_class: window
      icon: mdi:window-closed
      google_assistant: false
      homebridge_visible: true

envisalink:
  host: !secret envisalink_host
  port: 4025
  evl_version: 4
  panel_type: DSC
  user_name: !secret envisalink_password
  password: !secret envisalink_password
  code: !secret envisalink_code
  keepalive_interval: 60
  zonedump_interval: 30
  zones:
    1:
      name: 'Front Door Contact'
      type: 'opening'
    2:
      name: 'Garage Entry Contact'
      type: 'opening'
    3:
      name: 'Back Door Contact'
      type: 'opening'
    4:
      name: 'Guest Bedroom Window Contact'
      type: 'opening'
    5:
      name: 'Rear Bedroom Window Contact'
      type: 'opening'
    6:
      name: 'Balcony Door Contact'
      type: 'opening'
    7:
      name: 'Master Bedroom Motion'
      type: 'motion'
    8:
      name: 'Master Bath Window Contact'
      type: 'opening'
    9:
      name: 'Stairwell Motion'
      type: 'motion'
    10:
      name: 'Master Left Window Contact'
      type: 'opening'
    11:
      name: 'Master Right Window Contact'
      type: 'opening'

  partitions:
    1:
      name: 'Home'

# Build template for binary sensors to display proper icons and replacing on/off with open/closed for doors/windows
sensor:
  - platform: template
    sensors:
      front_door:
        friendly_name: Front Door
        value_template: >
          {% if is_state("binary_sensor.front_door_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.front_door_contact", "off") %} mdi:door-closed
          {% else %} mdi:door-open
          {% endif %}

  - platform: template
    sensors:
      back_door:
        friendly_name: Back Door
        value_template: >
          {% if is_state("binary_sensor.back_door_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.back_door_contact", "off") %} mdi:door-closed
          {% else %} mdi:door-open
          {% endif %}

  - platform: template
    sensors:
      garage_entry:
        friendly_name: Garage Entry
        value_template: >
          {% if is_state("binary_sensor.garage_entry_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.garage_entry_contact", "off") %} mdi:door-closed
          {% else %} mdi:door-open
          {% endif %}

  - platform: template
    sensors:
      balcony_door:
        friendly_name: Balcony Door
        value_template: >
          {% if is_state("binary_sensor.balcony_door_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.balcony_door_contact", "off") %} mdi:door-closed
          {% else %} mdi:door-open
          {% endif %}

  - platform: template
    sensors:
      master_bath_window:
        friendly_name: Master Bath Window
        value_template: >
          {% if is_state("binary_sensor.master_bath_window_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.master_bath_window_contact", "off") %} mdi:window-closed
          {% else %} mdi:window-open
          {% endif %}

  - platform: template
    sensors:
      master_left_window:
        friendly_name: Master Left Window
        value_template: >
          {% if is_state("binary_sensor.master_left_window_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.master_left_window_contact", "off") %} mdi:window-closed
          {% else %} mdi:window-open
          {% endif %}

  - platform: template
    sensors:
      master_right_window:
        friendly_name: Master Right Window
        value_template: >
          {% if is_state("binary_sensor.master_right_window_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.master_right_window_contact", "off") %} mdi:window-closed
          {% else %} mdi:window-open
          {% endif %}

  - platform: template
    sensors:
      guest_bedroom_window:
        friendly_name: Guest Bedroom Window
        value_template: >
          {% if is_state("binary_sensor.guest_bedroom_window_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.guest_bedroom_window_contact", "off") %} mdi:window-closed
          {% else %} mdi:window-open
          {% endif %}

  - platform: template
    sensors:
      rear_bedroom_window:
        friendly_name: Rear Bedroom Window
        value_template: >
          {% if is_state("binary_sensor.rear_bedroom_window_contact", "off") %} Closed
          {% else %} Open
          {% endif %}
        icon_template: >
          {% if is_state("binary_sensor.rear_bedroom_window_contact", "off") %} mdi:window-closed
          {% else %} mdi:window-open
          {% endif %}


input_boolean:
  alarm_override:
    name: Alarm Override
    initial: off
    icon: mdi:cancel
  vacation_mode:
    name: Vacation Mode
    initial: off
    icon: mdi:airplane
  guest_mode:
    name: Guest Mode
    initial: off
    icon: mdi:account-multiple

automation:
  - alias: Arm alarm when house vacated
    trigger:
    - entity_id: group.tracked_users
      platform: state
      to: not_home
    condition:
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'disarmed'
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
    - condition: state
      entity_id: input_boolean.alarm_override
      state: 'off'
    action:
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.home
      - service: notify.ios_allansiphone
        data:
          message: House is vacant. Arming security system
          title: Goodbye
          data:
            push:
              category: departure_event

# If vacation mode is enabled, wait up to one day for everyone to leave and then arm away. Let me know when armed
  - alias: Arm alarm when on vacation
    trigger:
    - entity_id: input_boolean.vacation_mode
      platform: state
      to: 'on'
    condition:
    - condition: state
      entity_id: alarm_control_panel.home
      state: 'disarmed'
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'off'
    - condition: state
      entity_id: input_boolean.alarm_override
      state: 'off'
    action:
      - wait_template: "{{ states.group.tracked_users.state == 'not_home' }}"
        timeout: 24:00:00
      - service: alarm_control_panel.alarm_arm_away
      - service: notify.ios_allansiphone
        data_template:
          message: "Vacation mode engaged. Enjoy {{ states.calendar.tripit.attributes.location }}!"
          data:
            push:
              category: departure_event

# Disarm alarm when someone gets home or when a valid code is entered in the exterior locks
  - alias: Disarm alarm upon presence or code unlock
    trigger:
      - entity_id: group.tracked_users
        from: not_home
        platform: state
        to: home
      - entity_id: sensor.front_door_alarm_type
        platform: state
        to: '19'
      - entity_id: sensor.back_door_alarm_type
        platform: state
        to: '19'
      - entity_id: sensor.back_gate_alarm_type
        platform: state
        to: '19'
      - entity_id: sensor.garage_door_alarm_type
        platform: state
        to: '19'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home
          state: 'armed_home'
        - condition: state
          entity_id: alarm_control_panel.home
          state: 'armed_away'
    action:
      - service: alarm_control_panel.alarm_disarm
      - service: notify.ios_allansiphone
        data:
          message: Alarm has been disarmed
          data:
            push:
              sound: US-EN-Morgan-Freeman-Welcome-Home.wav

# Send me a notification and a camera picture when the alarm triggers
  - alias: Push alarm trigger notification
    trigger:
      - entity_id: alarm_control_panel.home
        platform: state
        to: triggered
    action:
      - service: notify.ios_allansiphone
        data_template:
          message: "Alarm Triggered!"
          data:
            push:
              category: concerning_event
            entity_id: "camera.downstairs"
            attachment:
              url: "{{ states.camera.downstairs.attributes.entity_picture }}"
              content-type: jpg
